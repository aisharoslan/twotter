{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"user-profile\"\n};\nconst _hoisted_2 = {\n  class: \"user-profile__user-panel\"\n};\nconst _hoisted_3 = {\n  class: \"user-profile__username\"\n};\nconst _hoisted_4 = {\n  key: 0,\n  class: \"user-profile__admin-badge\"\n};\nconst _hoisted_5 = {\n  class: \"user-profile__follower-count\"\n};\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"strong\", null, \"Followers: \", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"h1\", _hoisted_3, \"@\" + _toDisplayString($data.user.username), 1 /* TEXT */), _createCommentVNode(\" TEMPLATE CONDITIONALS \"), $data.user.isAdmin ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, \" Admin \")) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_5, [_hoisted_6, _createTextVNode(\" \" + _toDisplayString($data.followers), 1 /* TEXT */)])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_toDisplayString","$data","user","username","_createCommentVNode","isAdmin","_hoisted_4","_hoisted_5","_hoisted_6","followers"],"sources":["/Users/aishasabrina/Desktop/Projects/twotter/twotter/twotter/src/components/UserProfile.vue"],"sourcesContent":["<!-- <template>\n  <div id=\"app\">\n    @{{ user.username }} - {{ fullName }} // Don't need to call data(), readily accessible, the {{}} is to show that it's dynamic\n    <strong>Followers: </strong> {{ followers }}\n    <button @click=\"followUser\">\n      Followers\n    </button>\n  </div>\n</template>\n-->\n<template>\n    <div class=\"user-profile\">\n      <div class=\"user-profile__user-panel\">\n        <h1 class=\"user-profile__username\">@{{ user.username }}</h1>\n        <!-- TEMPLATE CONDITIONALS -->\n        <div class=\"user-profile__admin-badge\" v-if=\"user.isAdmin\">\n            Admin\n        </div>\n        <div class=\"user-profile__follower-count\">\n          <strong>Followers: </strong> {{ followers }}\n        </div>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  export default {\n    // order doesn't matter in here\n    // name: 'App', // this is like key value pairs/\n    name: \"UserProfile\",\n    data() {\n      return {\n        // isLoading: false, // interacting w this to know if loading/not\n        // all this info below is usually given by API\n        followers: 0, // default state\n        user: { // user object\n          id: 1,\n          username: 'Shasbrna_19',\n          firstName: 'Aisha',\n          lastName: 'Sabrina',\n          email: 'aisharoslan@nyu.edu',\n          isAdmin: true\n        }\n      }\n    },\n    watch: {\n      // watches a data point - if it changes, runs a function, esp when u have data that changes REACTIVELY based off of other things\n      followers(newFollowerCount, oldFollowerCount) {\n        if (oldFollowerCount < newFollowerCount) { // only if gain follower\n          console.log(`${this.user.username} has gained a follower!`)\n          // same user component but putting diff data into it\n        }\n        // if username or id is diff - then we wanna fetch new user data\n      }\n    },\n    // computed property - 1 data point generated/built reactively from other factors \n    computed: {\n      fullName() {\n        return `${this.user.firstName} ${this.user.lastName}` // calls the user object in data() - this is a string literal\n        // another option: this.user.firstName + this.user.lastName\n      }\n    },\n    methods: { // doesn't run by itself, need to call\n      followUser() {\n        this.followers++; // adds followers count by 1\n      }\n    },\n    // LIFECYCLE HOOK - function built into vue interface that runs during diff stages of component's life cycle (e.g. created/mounted/destroyed)\n    // basically mounted just runs when the first component is rendered\n    mounted() {// runs whatever component is loaded for the first time\n      this.followUser(); // basically calls the followUser() method IMMEDIATELY\n      // so in a split second, it will add the 1 to the default 0 \n      // can also do cool stuff like getting user object from API, make API call\n    }\n  };\n  </script>\n  \n  <style>\n  .user-profile {\n    display: grid;\n    grid-template-columns: 1fr 3fr;\n    width: 100%;\n    padding: 50px 5%;\n  }\n\n  .user-profile__user-panel {\n    display: flex;\n    flex-direction: column;\n    margin-right: 50px;\n    padding: 20px;\n    background-color: white;\n    border-radius: 5px;\n    border: 1px solid #DFE3E8;\n  }\n  \n  .user-profile__admin-badge {\n    background: rebeccapurple;\n    color: white;\n    border-radius: 5px;\n    margin-right: auto;\n    padding: 0 10px;\n    font-weight: bold;\n  }\n\n  h1 {\n    margin: 0;\n  }\n  \n  </style>\n  "],"mappings":";;EAWSA,KAAK,EAAC;AAAc;;EAClBA,KAAK,EAAC;AAA0B;;EAC/BA,KAAK,EAAC;AAAwB;;;EAE7BA,KAAK,EAAC;;;EAGNA,KAAK,EAAC;AAA8B;gCACvCC,mBAAA,CAA4B,gBAApB,aAAW;;;uBARzBC,mBAAA,CAWM,OAXNC,UAWM,GAVJF,mBAAA,CASM,OATNG,UASM,GARJH,mBAAA,CAA4D,MAA5DI,UAA4D,EAAzB,GAAC,GAAAC,gBAAA,CAAGC,KAAA,CAAAC,IAAI,CAACC,QAAQ,kBACpDC,mBAAA,2BAA8B,EACeH,KAAA,CAAAC,IAAI,CAACG,OAAO,I,cAAzDT,mBAAA,CAEM,OAFNU,UAEM,EAFqD,SAE3D,K,mCACAX,mBAAA,CAEM,OAFNY,UAEM,GADJC,UAA4B,E,iBAAA,GAAC,GAAAR,gBAAA,CAAGC,KAAA,CAAAQ,SAAS,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}