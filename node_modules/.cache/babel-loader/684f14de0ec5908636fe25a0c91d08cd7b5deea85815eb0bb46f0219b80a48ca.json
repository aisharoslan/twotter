{"ast":null,"code":"import { reactive, computed } from 'vue';\nexport default {\n  name: \"CreateTwootPanel\",\n  setup(props, ctx) {\n    // ctx is context of component, remove need for $ on emit\n    const state = reactive({\n      newTwootContent: '',\n      selectedTwootType: 'instant',\n      twootTypes: [{\n        value: 'draft',\n        name: 'Draft'\n      }, {\n        value: 'instant',\n        name: 'Instant Twoot'\n      }]\n    });\n    const newTwootCharacterCount = computed(() => state.newTwootContent.length);\n    function createNewTwoot() {\n      if (state.newTwootContent && state.selectedTwootType !== 'draft') {\n        ctx.emit('add-twoot', state.newTwootContent);\n        state.newTwootContent = '';\n      }\n    }\n    return {\n      // return to template to use\n      state,\n      newTwootCharacterCount,\n      createNewTwoot\n    };\n  }\n  // data() {\n  //     return {\n  //         newTwootContent: '',\n  //         selectedTwootType: 'instant',\n  //         twootTypes: [\n  //             { value: 'draft', name: 'Draft' },\n  //             { value: 'instant', name: 'Instant Twoot' }\n  //         ],\n  //     }\n  // },\n  // computed: {\n  //     newTwootCharacterCount() {\n  //         return this.newTwootContent.length;\n  //     }\n  // },\n  // methods: {\n  //     createNewTwoot() {\n  //         if (this.newTwootContent && this.selectedTwootType !== 'draft') {\n  //             this.$emit('add-twoot', this.newTwootContent)\n  //             this.newTwootContent = '';\n  //         }\n  //     }\n  // }\n};","map":{"version":3,"names":["reactive","computed","name","setup","props","ctx","state","newTwootContent","selectedTwootType","twootTypes","value","newTwootCharacterCount","length","createNewTwoot","emit"],"sources":["/Users/aishasabrina/Desktop/Projects/twotter/twotter/twotter/src/components/CreateTwootPanel.vue"],"sourcesContent":["<template>\n    <form class=\"create-twoot-panel\" @submit.prevent=\"createNewTwoot\" :class=\"{ '--exceeded': newTwootCharacterCount > 180 }\">\n        <label for=\"newTwoot\"><strong>New Twoot</strong> ({{ newTwootCharacterCount }}/180)</label>\n        <textarea id=\"newTwoot\" rows=\"4\" v-model=\"state.newTwootContent\"/>\n\n        <div class=\"create-twoot-panel__submit\">\n            <div class=\"create-twoot-type\">\n                <label for=\"newTwootType\"><strong>Type: </strong></label>\n                <select id=\"newTwootType\" v-model=\"state.selectedTwootType\">\n                    <option :value=\"option.value\" v-for=\"(option, index) in state.twootTypes\" :key=\"index\">\n                        {{ option.name }}\n                    </option>\n                </select>\n            </div>\n\n            <button>\n                Twoot It!\n            </button>\n        </div>\n    </form>\n</template>\n\n<script>\nimport { reactive, computed } from 'vue';\n\nexport default {\n    name: \"CreateTwootPanel\",\n    setup(props, ctx) { // ctx is context of component, remove need for $ on emit\n        const state = reactive({\n            newTwootContent: '',\n            selectedTwootType: 'instant',\n            twootTypes: [\n                { value: 'draft', name: 'Draft' },\n                { value: 'instant', name: 'Instant Twoot' }\n            ],\n        })\n\n        const newTwootCharacterCount = computed(() => state.newTwootContent.length)\n\n        function createNewTwoot() {\n            if (state.newTwootContent && state.selectedTwootType !== 'draft') {\n                ctx.emit('add-twoot', state.newTwootContent)\n                state.newTwootContent = '';\n            }\n        }\n\n        return { // return to template to use\n            state,\n            newTwootCharacterCount,\n            createNewTwoot\n        }\n    }\n    // data() {\n    //     return {\n    //         newTwootContent: '',\n    //         selectedTwootType: 'instant',\n    //         twootTypes: [\n    //             { value: 'draft', name: 'Draft' },\n    //             { value: 'instant', name: 'Instant Twoot' }\n    //         ],\n    //     }\n    // },\n    // computed: {\n    //     newTwootCharacterCount() {\n    //         return this.newTwootContent.length;\n    //     }\n    // },\n    // methods: {\n    //     createNewTwoot() {\n    //         if (this.newTwootContent && this.selectedTwootType !== 'draft') {\n    //             this.$emit('add-twoot', this.newTwootContent)\n    //             this.newTwootContent = '';\n    //         }\n    //     }\n    // }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.create-twoot-panel {\n    margin-top: 20px;\n    padding: 20px 0;\n    display: flex;\n    flex-direction: column;\n\n    textarea {\n        border: 1px solid #DFE3E8;\n        border-radius: 5px;\n    }\n\n    .create-twoot-panel__submit {\n        display: flex;\n        justify-content: space-between;\n\n        .create-twoot-type {\n            padding: 10px 0;\n        }\n\n        button {\n            padding: 5px 20px;\n            margin: auto 0;\n            border-radius: 5px;\n            border: none;\n            background-color: rebeccapurple;\n            color: white;\n            font-weight: bold;\n        }\n    }\n\n    &.--exceeeded {\n        color: red;\n        border-color: red;\n\n        .create-twoot-panel__submit {\n            button {\n                background-color: red;\n                color: white;\n            }\n        }\n    }\n}\n</style>"],"mappings":"AAuBA,SAASA,QAAQ,EAAEC,QAAO,QAAS,KAAK;AAExC,eAAe;EACXC,IAAI,EAAE,kBAAkB;EACxBC,KAAKA,CAACC,KAAK,EAAEC,GAAG,EAAE;IAAE;IAChB,MAAMC,KAAI,GAAIN,QAAQ,CAAC;MACnBO,eAAe,EAAE,EAAE;MACnBC,iBAAiB,EAAE,SAAS;MAC5BC,UAAU,EAAE,CACR;QAAEC,KAAK,EAAE,OAAO;QAAER,IAAI,EAAE;MAAQ,CAAC,EACjC;QAAEQ,KAAK,EAAE,SAAS;QAAER,IAAI,EAAE;MAAgB;IAElD,CAAC;IAED,MAAMS,sBAAqB,GAAIV,QAAQ,CAAC,MAAMK,KAAK,CAACC,eAAe,CAACK,MAAM;IAE1E,SAASC,cAAcA,CAAA,EAAG;MACtB,IAAIP,KAAK,CAACC,eAAc,IAAKD,KAAK,CAACE,iBAAgB,KAAM,OAAO,EAAE;QAC9DH,GAAG,CAACS,IAAI,CAAC,WAAW,EAAER,KAAK,CAACC,eAAe;QAC3CD,KAAK,CAACC,eAAc,GAAI,EAAE;MAC9B;IACJ;IAEA,OAAO;MAAE;MACLD,KAAK;MACLK,sBAAsB;MACtBE;IACJ;EACJ;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}