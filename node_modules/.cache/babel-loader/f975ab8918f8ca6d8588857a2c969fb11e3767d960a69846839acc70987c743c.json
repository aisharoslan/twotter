{"ast":null,"code":"export default {\n  // order doesn't matter in here\n  // name: 'App', // this is like key value pairs/\n  name: \"UserProfile\",\n  data() {\n    return {\n      // isLoading: false, // interacting w this to know if loading/not\n      // all this info below is usually given by API\n      followers: 0,\n      // default state\n      user: {\n        // user object\n        id: 1,\n        username: 'Shasbrna_19',\n        firstName: 'Aisha',\n        lastName: 'Sabrina',\n        email: 'aisharoslan@nyu.edu',\n        isAdmin: false\n      }\n    };\n  },\n  watch: {\n    // watches a data point - if it changes, runs a function, esp when u have data that changes REACTIVELY based off of other things\n    followers(newFollowerCount, oldFollowerCount) {\n      if (oldFollowerCount < newFollowerCount) {\n        // only if gain follower\n        console.log(`${this.user.username} has gained a follower!`);\n        // same user component but putting diff data into it\n      }\n      // if username or id is diff - then we wanna fetch new user data\n    }\n  },\n\n  // computed property - 1 data point generated/built reactively from other factors \n  computed: {\n    fullName() {\n      return `${this.user.firstName} ${this.user.lastName}`; // calls the user object in data() - this is a string literal\n      // another option: this.user.firstName + this.user.lastName\n    }\n  },\n\n  methods: {\n    // doesn't run by itself, need to call\n    followUser() {\n      this.followers++; // adds followers count by 1\n    }\n  },\n\n  // LIFECYCLE HOOK - function built into vue interface that runs during diff stages of component's life cycle (e.g. created/mounted/destroyed)\n  // basically mounted just runs when the first component is rendered\n  mounted() {\n    // runs whatever component is loaded for the first time\n    this.followUser(); // basically calls the followUser() method IMMEDIATELY\n    // so in a split second, it will add the 1 to the default 0 \n    // can also do cool stuff like getting user object from API, make API call\n  }\n};","map":{"version":3,"names":["name","data","followers","user","id","username","firstName","lastName","email","isAdmin","watch","newFollowerCount","oldFollowerCount","console","log","computed","fullName","methods","followUser","mounted"],"sources":["/Users/aishasabrina/Desktop/Projects/twotter/twotter/twotter/src/components/UserProfile.vue"],"sourcesContent":["<!-- <template>\n  <div id=\"app\">\n    @{{ user.username }} - {{ fullName }} // Don't need to call data(), readily accessible, the {{}} is to show that it's dynamic\n    <strong>Followers: </strong> {{ followers }}\n    <button @click=\"followUser\">\n      Followers\n    </button>\n  </div>\n</template>\n-->\n<template>\n    <div class=\"user-profile\">\n      <div class=\"user-profile__user-panel\">\n        <h1 class=\"user-profile__username\">@{{ user.username }}</h1>\n        <!-- TEMPLATE CONDITIONALS -->\n        <div class=\"user-profile__admin-badge\" v-if=\"user.isAdmin\">\n            Admin\n        </div>\n        <div class=\"user-profile__follower-count\">\n          <strong>Followers: </strong> {{ followers }}\n        </div>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  export default {\n    // order doesn't matter in here\n    // name: 'App', // this is like key value pairs/\n    name: \"UserProfile\",\n    data() {\n      return {\n        // isLoading: false, // interacting w this to know if loading/not\n        // all this info below is usually given by API\n        followers: 0, // default state\n        user: { // user object\n          id: 1,\n          username: 'Shasbrna_19',\n          firstName: 'Aisha',\n          lastName: 'Sabrina',\n          email: 'aisharoslan@nyu.edu',\n          isAdmin: false\n        }\n      }\n    },\n    watch: {\n      // watches a data point - if it changes, runs a function, esp when u have data that changes REACTIVELY based off of other things\n      followers(newFollowerCount, oldFollowerCount) {\n        if (oldFollowerCount < newFollowerCount) { // only if gain follower\n          console.log(`${this.user.username} has gained a follower!`)\n          // same user component but putting diff data into it\n        }\n        // if username or id is diff - then we wanna fetch new user data\n      }\n    },\n    // computed property - 1 data point generated/built reactively from other factors \n    computed: {\n      fullName() {\n        return `${this.user.firstName} ${this.user.lastName}` // calls the user object in data() - this is a string literal\n        // another option: this.user.firstName + this.user.lastName\n      }\n    },\n    methods: { // doesn't run by itself, need to call\n      followUser() {\n        this.followers++; // adds followers count by 1\n      }\n    },\n    // LIFECYCLE HOOK - function built into vue interface that runs during diff stages of component's life cycle (e.g. created/mounted/destroyed)\n    // basically mounted just runs when the first component is rendered\n    mounted() {// runs whatever component is loaded for the first time\n      this.followUser(); // basically calls the followUser() method IMMEDIATELY\n      // so in a split second, it will add the 1 to the default 0 \n      // can also do cool stuff like getting user object from API, make API call\n    }\n  };\n  </script>\n  \n  <style>\n  .user-profile {\n    display: grid;\n    grid-template-columns: 1fr 3fr;\n    width: 100%;\n    padding: 50px 5%;\n  }\n\n  .user-profile__user-panel {\n    display: flex;\n    flex-direction: column;\n    margin-right: 50px;\n    padding: 20px;\n    background-color: white;\n    border-radius: 5px;\n    border: 1px solid #DFE3E8;\n  }\n  \n  .user-profile__admin-badge {\n    background: rebeccapurple;\n    color: white;\n    border-radius: 5px;\n    margin-right: auto;\n    padding: 0 10px;\n    font-weight: bold;\n  }\n\n  h1 {\n    margin: 0;\n  }\n  \n  </style>\n  "],"mappings":"AA0BE,eAAe;EACb;EACA;EACAA,IAAI,EAAE,aAAa;EACnBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACL;MACA;MACAC,SAAS,EAAE,CAAC;MAAE;MACdC,IAAI,EAAE;QAAE;QACNC,EAAE,EAAE,CAAC;QACLC,QAAQ,EAAE,aAAa;QACvBC,SAAS,EAAE,OAAO;QAClBC,QAAQ,EAAE,SAAS;QACnBC,KAAK,EAAE,qBAAqB;QAC5BC,OAAO,EAAE;MACX;IACF;EACF,CAAC;EACDC,KAAK,EAAE;IACL;IACAR,SAASA,CAACS,gBAAgB,EAAEC,gBAAgB,EAAE;MAC5C,IAAIA,gBAAe,GAAID,gBAAgB,EAAE;QAAE;QACzCE,OAAO,CAACC,GAAG,CAAE,GAAE,IAAI,CAACX,IAAI,CAACE,QAAQ,yBAAyB;QAC1D;MACF;MACA;IACF;EACF,CAAC;;EACD;EACAU,QAAQ,EAAE;IACRC,QAAQA,CAAA,EAAG;MACT,OAAQ,GAAE,IAAI,CAACb,IAAI,CAACG,SAAS,IAAI,IAAI,CAACH,IAAI,CAACI,QAAS,IAAE;MACtD;IACF;EACF,CAAC;;EACDU,OAAO,EAAE;IAAE;IACTC,UAAUA,CAAA,EAAG;MACX,IAAI,CAAChB,SAAS,EAAE,EAAE;IACpB;EACF,CAAC;;EACD;EACA;EACAiB,OAAOA,CAAA,EAAG;IAAC;IACT,IAAI,CAACD,UAAU,CAAC,CAAC,EAAE;IACnB;IACA;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}